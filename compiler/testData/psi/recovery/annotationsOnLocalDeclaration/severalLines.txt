JetFile: severalLines.kt
  PACKAGE_DIRECTIVE
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('data')
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A1')
      PsiWhiteSpace('\n\n    ')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('d1')
      PsiWhiteSpace('\n    ')
      PsiErrorElement:Only annotations in brackets ('[', ']') are allowed for local declarations
        MODIFIER_LIST
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('d2')
          PsiWhiteSpace(' ')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('d3')
      PsiWhiteSpace(' ')
      PROPERTY
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x1')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n\n    ')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('d3')
      PsiWhiteSpace('\n    ')
      PsiErrorElement:Only annotations in brackets ('[', ']') are allowed for local declarations
        MODIFIER_LIST
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('d5')
      PsiWhiteSpace(' ')
      FUN
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('bar1')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      BINARY_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(IDENTIFIER)('b')
        PsiErrorElement:Expecting an element
          <empty list>
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A')
      PsiWhiteSpace('\n\n    ')
      BINARY_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(PLUS)('+')
        PsiErrorElement:Expecting an element
          <empty list>
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('C')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')